vector<vector<int>> merge(vector<vector<int>>& intervals) 
    {
        int len=intervals.size();
        if(len<2)
        {
            return intervals;
        }
        vector<vector<int>> result;
        map<int,int> hashmap;
        for(int i=0;i<len;i++)
        {
            int x1=intervals[i][0];
            int x2=intervals[i][1];
            hashmap[x1]++;
            hashmap[x2]--;
        }
        map<int,int>::iterator itr;
        itr=hashmap.begin();
        int value=0;
        int index=itr->first;
        
        while(itr!=hashmap.end())
        {
            value=value+itr->second;
            if(value==0)
            {
                result.push_back({index,itr->first});
                itr++;
                index=itr->first;
                value=itr->second;
                if(value==0)
                    itr--;
            }
            itr++;            
        }
        
        
        
        return result;
        
    }
